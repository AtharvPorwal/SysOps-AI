python_commands = [
    {"command": "print()", "description": "Prints a message to the console.", "usage": "print('Hello')", "explanation": "Outputs the message to the console."},
    {"command": "len()", "description": "Returns the length of an object.", "usage": "len([1, 2, 3])", "explanation": "Counts the elements in a container."},
    {"command": "type()", "description": "Gets the type of an object.", "usage": "type(5)", "explanation": "Determines the object's class."},
    {"command": "isinstance()", "description": "Checks if an object is of a specific type.", "usage": "isinstance(5, int)", "explanation": "Validates type of the object."},
    {"command": "input()", "description": "Takes input from the user.", "usage": "name = input('Enter name: ')", "explanation": "Pauses execution to accept user input."},
    {"command": "int()", "description": "Converts to an integer.", "usage": "int('42')", "explanation": "Casts strings or floats to integers."},
    {"command": "float()", "description": "Converts to a floating-point number.", "usage": "float('42.5')", "explanation": "Casts strings or integers to floats."},
    {"command": "str()", "description": "Converts to a string.", "usage": "str(42)", "explanation": "Converts numbers or other objects to strings."},
    {"command": "list()", "description": "Creates a list.", "usage": "list((1, 2, 3))", "explanation": "Converts iterables to a list."},
    {"command": "tuple()", "description": "Creates a tuple.", "usage": "tuple([1, 2, 3])", "explanation": "Converts iterables to a tuple."},
    {"command": "set()", "description": "Creates a set.", "usage": "set([1, 2, 2])", "explanation": "Removes duplicates from iterables."},
    {"command": "dict()", "description": "Creates a dictionary.", "usage": "dict(a=1, b=2)", "explanation": "Creates key-value pairs."},
    {"command": "sorted()", "description": "Returns a sorted list.", "usage": "sorted([3, 1, 2])", "explanation": "Sorts the elements."},
    {"command": "max()", "description": "Returns the largest value.", "usage": "max([1, 2, 3])", "explanation": "Finds the maximum value in an iterable."},
    {"command": "min()", "description": "Returns the smallest value.", "usage": "min([1, 2, 3])", "explanation": "Finds the minimum value in an iterable."},
    {"command": "sum()", "description": "Returns the sum of elements.", "usage": "sum([1, 2, 3])", "explanation": "Calculates the sum of a numeric iterable."},
    {"command": "abs()", "description": "Returns the absolute value.", "usage": "abs(-5)", "explanation": "Calculates the magnitude of a number."},
    {"command": "round()", "description": "Rounds a number.", "usage": "round(3.14159, 2)", "explanation": "Rounds a float to a specified precision."},
    {"command": "range()", "description": "Generates a range of numbers.", "usage": "range(5)", "explanation": "Creates a sequence of numbers."},
    {"command": "enumerate()", "description": "Returns an iterable with indices.", "usage": "enumerate(['a', 'b'])", "explanation": "Provides index-value pairs."},
    {"command": "zip()", "description": "Combines iterables.", "usage": "zip([1, 2], ['a', 'b'])", "explanation": "Pairs elements from iterables."},
    {"command": "all()", "description": "Checks if all elements are True.", "usage": "all([True, True])", "explanation": "Returns True if all elements are true."},
    {"command": "any()", "description": "Checks if any element is True.", "usage": "any([False, True])", "explanation": "Returns True if at least one element is true."},
    {"command": "map()", "description": "Applies a function to iterable.", "usage": "map(str.upper, ['a', 'b'])", "explanation": "Transforms each element."},
    {"command": "filter()", "description": "Filters iterable elements.", "usage": "filter(lambda x: x > 0, [-1, 0, 1])", "explanation": "Keeps only elements that match a condition."},
    {"command": "reversed()", "description": "Reverses an iterable.", "usage": "reversed([1, 2, 3])", "explanation": "Returns a reversed iterator."},
    {"command": "next()", "description": "Gets the next item from an iterator.", "usage": "next(iter([1, 2, 3]))", "explanation": "Advances the iterator."},
    {"command": "eval()", "description": "Evaluates a Python expression.", "usage": "eval('3 + 4')", "explanation": "Executes a string as code."},
    {"command": "exec()", "description": "Executes Python code.", "usage": "exec('a = 5')", "explanation": "Executes a block of code dynamically."},
    {"command": "open()", "description": "Opens a file.", "usage": "open('file.txt', 'r')", "explanation": "Handles file input and output."},
    {"command": "read()", "description": "Reads file content.", "usage": "file.read()", "explanation": "Reads all data from an open file."},
    {"command": "write()", "description": "Writes data to a file.", "usage": "file.write('Hello')", "explanation": "Writes string data to an open file."},
    {"command": "close()", "description": "Closes an open file.", "usage": "file.close()", "explanation": "Frees file resources."},
    {"command": "split()", "description": "Splits a string.", "usage": "'a b'.split()", "explanation": "Divides a string into a list."},
    {"command": "join()", "description": "Joins strings.", "usage": "' '.join(['a', 'b'])", "explanation": "Concatenates list elements."},
    {"command": "replace()", "description": "Replaces parts of a string.", "usage": "'hello'.replace('l', 'r')", "explanation": "Substitutes substrings."},
    {"command": "strip()", "description": "Removes whitespace.", "usage": "' hello '.strip()", "explanation": "Removes leading and trailing spaces."},
    {"command": "upper()", "description": "Converts to uppercase.", "usage": "'abc'.upper()", "explanation": "Transforms all characters to uppercase."},
    {"command": "lower()", "description": "Converts to lowercase.", "usage": "'ABC'.lower()", "explanation": "Transforms all characters to lowercase."},
    {"command": "count()", "description": "Counts occurrences.", "usage": "'aaa'.count('a')", "explanation": "Counts occurrences of a substring."},
    {"command": "find()", "description": "Finds substring index.", "usage": "'abc'.find('b')", "explanation": "Returns the index of the first match."},
    {"command": "index()", "description": "Gets element index.", "usage": "[1, 2, 3].index(2)", "explanation": "Returns the index of the first occurrence."},
    {"command": "append()", "description": "Adds an element to a list.", "usage": "[1].append(2)", "explanation": "Adds to the end of a list."},
    {"command": "extend()", "description": "Extends a list.", "usage": "[1].extend([2, 3])", "explanation": "Adds multiple elements to a list."},
    {"command": "pop()", "description": "Removes and returns an element.", "usage": "[1, 2].pop()", "explanation": "Removes the last or specified index."},
    {"command": "remove()", "description": "Removes a value.", "usage": "[1, 2].remove(1)", "explanation": "Deletes the first occurrence of a value."},
    {"command": "insert()", "description": "Inserts an element.", "usage": "[1, 3].insert(1, 2)", "explanation": "Adds an element at a specific index."},
    {"command": "sort()", "description": "Sorts a list.", "usage": "[3, 1, 2].sort()", "explanation": "Sorts in place in ascending order."},
    {"command": "reverse()", "description": "Reverses a list.", "usage": "[1, 2].reverse()", "explanation": "Reverses the order of elements."},
    {"command": "copy()", "description": "Copies a list.", "usage": "[1].copy()", "explanation": "Creates a shallow copy of the list."},
    {"command": "clear()", "description": "Clears all elements.", "usage": "[1].clear()", "explanation": "Removes all elements from the list."},
]

